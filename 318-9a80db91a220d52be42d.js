(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{1087:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(0),r=n.n(a),o=n(850),d=n.n(o),i=function(e){var t=e.url;return r.a.createElement(d.a,{name:"terra-form-field",version:"4.1.0",url:t})}},2338:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));n(0);var a=n(277),r=n(1087);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i={};function l(e){var t=e.components,n=d(e,["components"]);return Object(a.mdx)("wrapper",o({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.mdx)(r.a,{mdxType:"Badge"}),Object(a.mdx)("h1",{id:"terra-form-field-upgrade-guide"},"Terra Form Field Upgrade Guide"),Object(a.mdx)("h2",{id:"changes-from-version-3-to-version-4"},"Changes from version 3 to version 4"),Object(a.mdx)("h3",{id:"props"},"Props"),Object(a.mdx)("h4",{id:"updated"},"Updated"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Form Fields allowed the ",Object(a.mdx)("inlineCode",{parentName:"li"},"label")," to be a node, which potentially breaks the display when injecting other non-inline-only text elements (terra-text) or has the potential to completely break accessibility if something non-text based would be passed in."),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"label")," prop's type changed from node to string.")),Object(a.mdx)("h5",{id:"steps-to-upgrade"},"Steps to Upgrade"),Object(a.mdx)("p",null,"To upgrade from 3.0 to 4.0 each existing Field must be reviewed and updated to ensure only a string is being passed to the ",Object(a.mdx)("inlineCode",{parentName:"p"},"label")," prop. Solutions passing node data types need to be reworked to provide only a string."),Object(a.mdx)("h2",{id:"changes-from-20-to-30"},"Changes from 2.0 to 3.0"),Object(a.mdx)("h3",{id:"changes-to-css-custom-properties"},"Changes to CSS Custom Properties"),Object(a.mdx)("p",null,"The following transitive dependency had breaking changes. See its upgrade guide for more information."),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"terra-doc-template")))}l.isMDXComponent=!0},850:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),r=i(n(3)),o=i(n(5)),d=i(n(851));function i(e){return e&&e.__esModule?e:{default:e}}var l=o.default.bind(d.default),s={name:r.default.string.isRequired,url:r.default.string,version:r.default.string.isRequired},c=function(e){var t=e.name,n=e.url,r=e.version;return a.default.createElement("div",{className:l("badge-container")},a.default.createElement("a",{className:l("badge"),href:n||"https://www.npmjs.org/package/".concat(t,"/v/").concat(r)},a.default.createElement("span",{className:l("badge-name")},n?"package":"npm"),a.default.createElement("span",{className:l("badge-version")},"v".concat(r))))};c.propTypes=s;var u=c;t.default=u},851:function(e,t,n){e.exports={badge:"NpmBadge-module__badge___3p041","badge-container":"NpmBadge-module__badge-container___2W9ft","badge-name":"NpmBadge-module__badge-name___2TNAy","badge-version":"NpmBadge-module__badge-version___3bRIz"}}}]);
//# sourceMappingURL=318-9a80db91a220d52be42d.js.map